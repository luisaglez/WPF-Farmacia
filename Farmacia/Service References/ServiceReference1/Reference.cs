//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Farmacia.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFarmacia")]
    public interface IFarmacia {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/guardar", ReplyAction="http://tempuri.org/IFarmacia/guardarResponse")]
        void guardar(int a, string b, string c, int d, string e, float f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/guardar", ReplyAction="http://tempuri.org/IFarmacia/guardarResponse")]
        System.Threading.Tasks.Task guardarAsync(int a, string b, string c, int d, string e, float f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/borrar", ReplyAction="http://tempuri.org/IFarmacia/borrarResponse")]
        bool borrar(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/borrar", ReplyAction="http://tempuri.org/IFarmacia/borrarResponse")]
        System.Threading.Tasks.Task<bool> borrarAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/buscar", ReplyAction="http://tempuri.org/IFarmacia/buscarResponse")]
        string[] buscar(int fol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/buscar", ReplyAction="http://tempuri.org/IFarmacia/buscarResponse")]
        System.Threading.Tasks.Task<string[]> buscarAsync(int fol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/editar", ReplyAction="http://tempuri.org/IFarmacia/editarResponse")]
        bool editar(int a, string b, string c, int d, string e, float f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFarmacia/editar", ReplyAction="http://tempuri.org/IFarmacia/editarResponse")]
        System.Threading.Tasks.Task<bool> editarAsync(int a, string b, string c, int d, string e, float f);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFarmaciaChannel : Farmacia.ServiceReference1.IFarmacia, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FarmaciaClient : System.ServiceModel.ClientBase<Farmacia.ServiceReference1.IFarmacia>, Farmacia.ServiceReference1.IFarmacia {
        
        public FarmaciaClient() {
        }
        
        public FarmaciaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FarmaciaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FarmaciaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FarmaciaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void guardar(int a, string b, string c, int d, string e, float f) {
            base.Channel.guardar(a, b, c, d, e, f);
        }
        
        public System.Threading.Tasks.Task guardarAsync(int a, string b, string c, int d, string e, float f) {
            return base.Channel.guardarAsync(a, b, c, d, e, f);
        }
        
        public bool borrar(int a) {
            return base.Channel.borrar(a);
        }
        
        public System.Threading.Tasks.Task<bool> borrarAsync(int a) {
            return base.Channel.borrarAsync(a);
        }
        
        public string[] buscar(int fol) {
            return base.Channel.buscar(fol);
        }
        
        public System.Threading.Tasks.Task<string[]> buscarAsync(int fol) {
            return base.Channel.buscarAsync(fol);
        }
        
        public bool editar(int a, string b, string c, int d, string e, float f) {
            return base.Channel.editar(a, b, c, d, e, f);
        }
        
        public System.Threading.Tasks.Task<bool> editarAsync(int a, string b, string c, int d, string e, float f) {
            return base.Channel.editarAsync(a, b, c, d, e, f);
        }
    }
}
